
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://mmqkvjxsxufozfgqjoxz.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im1tcWt2anhzeHVmb3pmZ3Fqb3h6Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDc2NTA0NjYsImV4cCI6MjA2MzIyNjQ2Nn0.enK86qnUULCkOQhzVjsz68gTu3854tLwn1Y3Snah6f4";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: typeof localStorage !== 'undefined' ? localStorage : undefined, 
    persistSession: true,
    autoRefreshToken: true,
  },
  db: {
    schema: 'public'
  },
  global: {
    headers: { 'x-my-custom-header': 'monkey-deals-app' },
    // Optimize for data freshness with appropriate caching
    fetch: (url, options) => {
      const fetchOptions = {
        ...options,
        // Skip cache for POST requests and GET that include certain paths
        cache: url.includes('Linkmydeals_Offers') ? 'no-cache' : 'default',
        // Add a cache buster to URLs fetching offers data
        ...(url.includes('Linkmydeals_Offers') ? {
          headers: {
            ...options?.headers,
            'Cache-Control': 'no-cache, no-store, max-age=0',
            'Pragma': 'no-cache',
          }
        } : {}),
        signal: AbortSignal.timeout(180000), // Maintain 3 minute timeout for larger datasets
      };
      
      // For offer queries, append a timestamp to force cache bypass
      if (url.includes('Linkmydeals_Offers') && !url.includes('timestamp=')) {
        const separator = url.includes('?') ? '&' : '?';
        url = `${url}${separator}timestamp=${Date.now()}`;
      }
      
      return fetch(url, fetchOptions);
    }
  }
});
